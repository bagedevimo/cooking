# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/argon2/all/argon2.rbi
#
# argon2-2.0.3

module Argon2
end
module Argon2::Constants
end
module Argon2::Ext
  def argon2_wrap(*arg0); end
  def argon2i_hash_raw(*arg0); end
  def argon2id_hash_raw(*arg0); end
  def self.argon2_wrap(*arg0); end
  def self.argon2i_hash_raw(*arg0); end
  def self.argon2id_hash_raw(*arg0); end
  def self.wrap_argon2_verify(*arg0); end
  def wrap_argon2_verify(*arg0); end
  extend FFI::Library
end
class Argon2::Engine
  def self.argon2_verify(pwd, hash, secret); end
  def self.hash_argon2i(password, salt, t_cost, m_cost, out_len = nil); end
  def self.hash_argon2id(password, salt, t_cost, m_cost, out_len = nil); end
  def self.hash_argon2id_encode(password, salt, t_cost, m_cost, secret); end
  def self.saltgen; end
end
class Argon2::ArgonHashFail < StandardError
end
class Argon2::Password
  def create(pass); end
  def initialize(options = nil); end
  def self.create(pass); end
  def self.valid_hash?(hash); end
  def self.verify_password(pass, hash, secret = nil); end
end
